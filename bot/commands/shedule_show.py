import random

from ..BotClasses import Command as command_class, traceback
from ..BotClasses import User, Message, StudentShedule
from ..BotClasses.Keyboards import keyboard
from clients.tg.api import TgClient


frazi = ["–ú–æ–∂–Ω–æ —Å—Ö–æ–¥–∏—Ç—å –≤ –∫–∏–Ω–æ üòö", "–ú–æ–∂–Ω–æ –ø–æ—á–∏—Ç–∞—Ç—å üòö", "–ú–æ–∂–Ω–æ –ø—Ä–æ–≥—É–ª—è—Ç—å—Å—è –≤ –ª–µ—Å—É üòö",
         "–ú–æ–∂–Ω–æ —Ä–∞—Å–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –¥–µ–ª–∞ –Ω–∞ –Ω–µ–¥–µ–ª—é üòö", "–ú–æ–∂–Ω–æ –∑–∞–Ω—è—Ç—å—Å—è —Å–ø–æ—Ä—Ç–æ–º, –Ω–∞–ø—Ä–∏–º–µ—Ä. üòö",
         "–ú–æ–∂–Ω–æ –≤—Å–ø–æ–º–Ω–∏—Ç—å —Å—Ç—Ä–æ—á–∫–∏ –≥–∏–º–Ω–∞ –ö–ê–ò üòö", "–ú–æ–∂–Ω–æ –∑–∞–Ω—è—Ç—å—Å—è —á–µ–º —Ç–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–º üòö",
         "–ú–æ–∂–Ω–æ –≤—Å—Ç—Ä–µ—Ç–∏—Ç—å—Å—è —Å –¥—Ä—É–∑—å—è–º–∏ üòö"]


async def processor(user: User, message: Message, tg_client: TgClient, callback_query=False, stage=None):
    day_count = 0
    text = message.text.lower()
    day_week = ''
    if text in ['–Ω–∞ –∑–∞–≤—Ç—Ä–∞', '—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –∑–∞–≤—Ç—Ä–∞', '–∑–∞–≤—Ç—Ä–∞', 'tomorrow']:
        day_week = "–ó–∞–≤—Ç—Ä–∞"
        day_count = 1
    elif text in ['–Ω–∞ —Å–µ–≥–æ–¥–Ω—è', '—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è', '—Å–µ–≥–æ–¥–Ω—è', 'today']:
        day_week = "–°–µ–≥–æ–¥–Ω—è"
        day_count = 0
    elif text in ['–Ω–∞ –ø–æ—Å–ª–µ–∑–∞–≤—Ç—Ä–∞', '—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –ø–æ—Å–ª–µ–∑–∞–≤—Ç—Ä–∞', '–ø–æ—Å–ª–µ–∑–∞–≤—Ç—Ä–∞', 'afterday']:
        day_week = "–ü–æ—Å–ª–µ–∑–∞–≤—Ç—Ä–∞"
        day_count = 2
    elif text in ['–ø–æ–ª–Ω–æ—Å—Ç—å—é', '—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é', 'shedule']:
        day_week = "–≤—Å—é –Ω–µ–¥–µ–ª—é"
        day_count = -1
    elif text in ['–ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏', '–º–æ–∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏', '–ø—Ä–µ–ø–æ–¥—ã']:
        day_count = -2
    elif text in ['—á–µ—Ç–Ω–æ—Å—Ç—å', '–∫–∞–∫–∞—è –Ω–µ–¥–µ–ª—è', '–∫–∞–∫–∞—è —Å–µ–π—á–∞—Å –Ω–µ–¥–µ–ª—è', '—á–µ—Ç–Ω–æ—Å—Ç—å –Ω–µ–¥–µ–ª–∏']:
        day_count = -3
    shedule = await StudentShedule(user, message).showTimetable(user.group_id, day_count)
    if day_count == -3:
        msg = '–ß–µ—Ç–Ω–∞—è' if shedule else '–ù–µ—á–µ—Ç–Ω–∞—è'
        await tg_client.send_message(user.id, msg, buttons=keyboard('main_keyboard', user).get_keyboard())
        return
    if shedule:
        try:
            if day_count == -2:
                msg = "–°–ø–∏—Å–æ–∫ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π:\n{}".format(shedule[:3000])
            else:
                msg = "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ {}\n {}".format(day_week.lower(), shedule[:3000])
            await tg_client.send_message(user.id, msg, buttons=keyboard('main_keyboard', user).get_keyboard())
        except:
            print('–û—à–∏–±–∫–∞:\n', traceback.format_exc())
    else:
        msg = day_week + ' –∑–∞–Ω—è—Ç–∏–π –Ω–µ—Ç üòé\n' + frazi[random.randint(0, len(frazi) - 1)]
        await tg_client.send_message(user.id, msg, buttons=keyboard('main_keyboard', user).get_keyboard())
    return


command = command_class()

command.keys = ['–Ω–∞ –∑–∞–≤—Ç—Ä–∞', '—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –∑–∞–≤—Ç—Ä–∞', '–∑–∞–≤—Ç—Ä–∞', 'tomorrow',
                '–Ω–∞ —Å–µ–≥–æ–¥–Ω—è', '—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è', '—Å–µ–≥–æ–¥–Ω—è', 'today',
                '–Ω–∞ –ø–æ—Å–ª–µ–∑–∞–≤—Ç—Ä–∞', '—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –ø–æ—Å–ª–µ–∑–∞–≤—Ç—Ä–∞', '–ø–æ—Å–ª–µ–∑–∞–≤—Ç—Ä–∞', 'afterday',
                '–ø–æ–ª–Ω–æ—Å—Ç—å—é', '—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é', 'shedule',
                '–ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏', '–º–æ–∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏', '–ø—Ä–µ–ø–æ–¥—ã',
                '—á–µ—Ç–Ω–æ—Å—Ç—å', '–∫–∞–∫–∞—è –Ω–µ–¥–µ–ª—è', '–∫–∞–∫–∞—è —Å–µ–π—á–∞—Å –Ω–µ–¥–µ–ª—è', '—á–µ—Ç–Ω–æ—Å—Ç—å –Ω–µ–¥–µ–ª–∏'
                ]
command.process = processor
command.role = [1]
